# -*- coding: utf-8 -*-
"""E-comm

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HMKTfm7rDr5gcepRVS-pDVjFy1TAiTLv
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline

df=pd.read_csv('/content/Ecommerce Customers')

df.head()

df.info()

sns.jointplot(data=df, x='Time on Website',y='Yearly Amount Spent')
plt.show()

sns.jointplot(x='Time on App',y='Yearly Amount Spent',data=df)

sns.lmplot(x='Length of Membership',y='Yearly Amount Spent',data=df)

X = df[['Avg. Session Length', 'Time on App','Time on Website', 'Length of Membership']]

y = df['Yearly Amount Spent']

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)

from sklearn.linear_model import LinearRegression

lm = LinearRegression()

lm.fit(X_train,y_train)

predictions = lm.predict( X_test)

plt.scatter(y_test,predictions)
plt.xlabel('Y Test')
plt.ylabel('Predicted Y')

from sklearn import metrics

print('MAE:', metrics.mean_absolute_error(y_test, predictions))
print('MSE:', metrics.mean_squared_error(y_test, predictions))
print('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, predictions)))

sns.histplot((y_test-predictions),bins=50);

import pickle

pickle.dump(lm,open('E-com.pkl','wb'))

